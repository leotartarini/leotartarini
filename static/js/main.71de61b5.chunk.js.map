{"version":3,"sources":["logo.svg","pages/Landing.jsx","assets/icons/wpp.svg","assets/icons/twitter.svg","assets/icons/facebook.svg","assets/icons/linkedin.svg","components/BlogContent.jsx","pages/BlogTest.jsx","GlobalStyle.js","App.js","reportWebVitals.js","index.js"],"names":["Billboard","styled","div","HeadingContainer","Heading","h1","LinksContainer","Link","a","p","color","Landing","href","target","rel","BlogContent","props","page","window","location","Container","Tag","tag","toUpperCase","Title","title","Subtitle","subtitulo","DataBlock","data","style","display","justifyContent","alignItems","width","padding","src","WhatsApp","alt","Twitter","Facebook","LinkedIn","height","backgroundColor","margin","children","Date","BlogTest","useState","markdown","setMarkdown","blogTitle","setBlogTitle","blogSubtitle","setBlogSubtitle","date","setDate","setTag","error","setErro","blogid","useParams","content","useEffect","fetch","then","response","ok","text","Promise","reject","marked","catch","obj","JSON","parse","titulo","assunto","dangerouslySetInnerHTML","__html","createGlobalStyle","App","className","path","exact","component","GlobalStyle","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.71de61b5.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.6ce24c58.svg\";","import React from 'react';\r\nimport styled from 'styled-components';\r\n\r\nconst Landing = () => {\r\n    return(\r\n        <div>\r\n            <Billboard>\r\n                <HeadingContainer>\r\n                    <Heading>Leonardo Tartarini</Heading>\r\n                    <LinksContainer>\r\n                        <Link color={'var(--main)'} href='mailto:leonardo@sigma.cash'>Email</Link>\r\n                        <Link color={'#2867B2'} href='https://linkedin.com/in/leotartarini' target='_blank' rel='noopener'>LinkedIn</Link>\r\n                        <Link color={'#1DA1F2'} href='https://twitter.com/eutartarini' target='_blank' rel='noopener'>Twitter</Link>\r\n                        <Link color={'#24292d'} href='https://github.com/leotartarini' target='_blank' rel='noopener'>Github</Link>\r\n                        <Link color={'#26cb17'} href='https://sigma.cash' target='_blank' rel='noopener'>Sigma</Link>\r\n                    </LinksContainer>\r\n                </HeadingContainer>\r\n            </Billboard>\r\n        </div>\r\n    )\r\n};\r\n\r\nconst Billboard = styled.div`\r\n    height: 100vh;\r\n    /* background-color: #FFF1E5; */\r\n    background-color: var(--background);\r\n    display: flex;\r\n    align-items: center;\r\n`;\r\n\r\nconst HeadingContainer = styled.div`\r\n    margin: 0 10vw;\r\n    text-align: left;\r\n`;\r\n\r\nconst Heading = styled.h1`\r\n    font-size: 70px;\r\n    font-weight: normal;\r\n    margin: 0 0 15px 0;\r\n    font-family: 'Lora', serif;\r\n    /* color: #8F223A; */\r\n    color: var(--main);\r\n    \r\n    @media only screen and (max-width: 900px) {\r\n    font-size: 55px;\r\n    }\r\n    @media only screen and (max-width: 540px) {\r\n    font-size: 40px;\r\n    }\r\n`;\r\n\r\nconst LinksContainer = styled.div`\r\n    font-size: 20px;\r\n    font-family: 'Noto Sans JP', sans-serif;\r\n    max-width: 500px;\r\n    display: flex;\r\n    flex-wrap: wrap;\r\n    margin-top: 15px;\r\n\r\n    @media only screen and (max-width: 540px) {\r\n    font-size: 20px;\r\n    margin-top: 20px;\r\n    }\r\n`;\r\n\r\nconst Link = styled.a`\r\n    text-decoration: underline ${p => p.color || '#26cb17'};\r\n    color: var(--black);\r\n    margin: 5px 20px 15px 0;\r\n    \r\n`;\r\n\r\n\r\nexport default Landing;","export default __webpack_public_path__ + \"static/media/wpp.a30d2c46.svg\";","export default __webpack_public_path__ + \"static/media/twitter.ba30e169.svg\";","export default __webpack_public_path__ + \"static/media/facebook.07adab79.svg\";","export default __webpack_public_path__ + \"static/media/linkedin.1fc60108.svg\";","import React from 'react';\r\nimport styled from 'styled-components';\r\n\r\nimport WhatsApp from '../assets/icons/wpp.svg';\r\nimport Twitter from '../assets/icons/twitter.svg';\r\nimport Facebook from '../assets/icons/facebook.svg';\r\nimport LinkedIn from '../assets/icons/linkedin.svg';\r\n\r\nconst BlogContent = (props) => {\r\n\r\n    let page = window.location.href;\r\n\r\n    return(\r\n        <Container>\r\n            <Tag>{props.tag.toUpperCase()}</Tag>\r\n            <Title>{props.title}</Title>\r\n            <Subtitle>{props.subtitulo}</Subtitle>\r\n            <DataBlock>\r\n                <Date>{props.data}</Date>\r\n                <div style={{\r\n                    display: 'flex',\r\n                    justifyContent: 'space-between',\r\n                    alignItems: 'center',\r\n                    width: '180px',\r\n                    padding: '8px 0 0 0'\r\n                }}>\r\n                    <a href={`http://api.whatsapp.com/send?text=${props.title} ${page}`}\r\n                    target='_blank' rel='noopener' style={{\r\n                        width: '12px'\r\n                    }}>\r\n                        <img src={WhatsApp} alt=\"WhatsApp\" />\r\n                    </a>\r\n                    <a href={`https://twitter.com/intent/tweet?text=${props.title} ${page}`} target='_blank' rel='noopener' style={{\r\n                        width: '12px'\r\n                    }}>\r\n                        <img src={Twitter} alt=\"Twitter\" />\r\n                    </a>\r\n                    <a href={`https://www.facebook.com/sharer/sharer.php?u=${page}`}\r\n                    target='_blank' rel='noopener' style={{\r\n                        width: '12px'\r\n                    }}>\r\n                        <img src={Facebook} alt=\"Facebook\" />\r\n                    </a>\r\n                    <a href={`https://www.linkedin.com/sharing/share-offsite/?url=${page}`}\r\n                    target='_blank' rel='noopener' style={{\r\n                        width: '24px'\r\n                    }}>\r\n                        <img src={LinkedIn} alt=\"Linkedin\" />\r\n                    </a>\r\n                </div>\r\n            </DataBlock>\r\n            <div style={{\r\n                width: '120px',\r\n                height: '2px',\r\n                backgroundColor: 'var(--main)',\r\n                margin: '40px 0'\r\n            }}></div>\r\n            {props.children}\r\n            <div style={{\r\n                width: '120px',\r\n                height: '2px',\r\n                backgroundColor: 'var(--main)',\r\n                margin: '80px 0'\r\n            }}></div>\r\n        </Container>\r\n    )\r\n}\r\n\r\nexport default BlogContent;\r\n\r\nconst Container = styled.div`\r\n    text-align: left;\r\n    max-width: 800px;\r\n    margin: 35px auto 10px auto;\r\n    padding: 10px 20px;\r\n`;\r\n\r\nconst Tag = styled.p`\r\n    font-size: 18px;\r\n    font-family: 'Noto Sans JP', sans-serif;\r\n    color: var(--main);\r\n    margin: 0;\r\n`;\r\n\r\nconst Title = styled.p`\r\n    font-family: 'Lora', serif;\r\n    font-weight: 500;\r\n    font-size: 45px;\r\n    margin: 0;\r\n    line-height: 1.5em;\r\n    color: var(--black);\r\n`;\r\nconst Subtitle = styled.p`\r\n    font-family: 'Noto Sans JP', sans-serif;\r\n    font-size: 20px;\r\n    line-height: 1.8em;\r\n    font-weight: 500;\r\n    color: var(--dark-grey);\r\n    margin: 5px 0 0 0;\r\n`;\r\nconst Date = styled.p`\r\n    font-family: 'Lora', serif;\r\n    font-size: 18px;\r\n    font-style: italic;\r\n    font-weight: 500;\r\n    height: 10px;\r\n\r\n    @media (max-width: 450px) {\r\n        margin-bottom: 40px;\r\n    }\r\n`;\r\n\r\nconst DataBlock = styled.div`\r\n    display: flex;\r\n    justify-content: space-between;\r\n    align-items: center;\r\n    margin-top: 20px;\r\n    \r\n\r\n    @media (max-width: 450px) {\r\n        display: block;\r\n    }\r\n`;\r\n\r\n","import React, { useState, useEffect } from 'react';\r\nimport { useParams } from 'react-router-dom';\r\nimport marked from 'marked';\r\nimport BlogContent from '../components/BlogContent';\r\n\r\nconst BlogTest = () => {\r\n    const [markdown, setMarkdown] = useState('');\r\n    const [blogTitle, setBlogTitle] = useState('');\r\n    const [blogSubtitle, setBlogSubtitle] = useState('');\r\n    const [date, setDate] = useState('');\r\n    const [tag, setTag] = useState('');\r\n\r\n    const [error, setErro] = useState(false);\r\n\r\n    let { blogid } = useParams();\r\n\r\n    let content = (`https://raw.githubusercontent.com/leotartarini/posts/main/${blogid}/content.md`)\r\n    let data = (`https://raw.githubusercontent.com/leotartarini/posts/main/${blogid}/data.json`)\r\n    \r\n    useEffect(() => {\r\n        fetch(content)\r\n            .then((response) => {\r\n                if (response.ok) return response.text();\r\n                else return Promise.reject(\"Didn't fetch text correctly\");\r\n            })\r\n            .then((text) => {\r\n                setMarkdown(marked(text));\r\n            })\r\n            .catch((error) => setErro(true));\r\n\r\n        fetch(data)\r\n            .then((response) => {\r\n                if (response.ok) return response.text();\r\n                else return Promise.reject(\"Didn't fetch text correctly\");\r\n            })\r\n            .then((text) => {\r\n                let obj = JSON.parse(text);\r\n                setBlogTitle(obj.titulo);\r\n                setBlogSubtitle(obj.subtitulo);\r\n                setDate(obj.data);\r\n                setTag(obj.assunto);\r\n            })\r\n            .catch((error) => setErro(true));\r\n    });\r\n\r\n    \r\n    return(\r\n        <div>\r\n            {error === false ?\r\n            (<>\r\n                <BlogContent title={blogTitle} subtitulo={blogSubtitle} data={date} tag={tag}>\r\n                    <div dangerouslySetInnerHTML={{__html: markdown}} />\r\n                </BlogContent>\r\n            </>) : \r\n            (<>\r\n                <h1>Este blog não existe.</h1>\r\n            </>)}\r\n\r\n        </div>\r\n    )\r\n};\r\n\r\nexport default BlogTest;","import { createGlobalStyle } from 'styled-components';\r\n\r\nexport default createGlobalStyle`\r\n    * {\r\n        margin: 0;\r\n        padding: 0;\r\n        box-sizing: border-box;\r\n        /* color: var(--black); */\r\n    }\r\n    html, body, #root {\r\n        max-height: 100vh;\r\n        max-width: 100vw;\r\n        height: 100%;\r\n        width: 100%;\r\n    }\r\n    *, button, input {\r\n        border: 0;\r\n        background: none;\r\n    }\r\n    html {\r\n        background: var(--blog-background);\r\n    }\r\n    /* :root {\r\n        --main: #8F223A;\r\n        --white: #ffffff;\r\n        --black: #000000;\r\n        --dark: #191414;\r\n        --title: #333;\r\n        --light-blue: #0274b6;\r\n        --toka-dark: #0059B3; \r\n        --light: #fafafa;\r\n        --grey: #f5f5f5;\r\n        --dark-grey: #979797;\r\n        --outline: #c6c6c6;\r\n        --red: #ff5c00;\r\n        --blog-background: #FFF1E5;\r\n        --background: #FFF1E5;\r\n    } */\r\n    :root {\r\n        --main: #22458f;\r\n        --white: #ffffff;\r\n        --black: #000000;\r\n        --dark: #191414;\r\n        --title: #333;\r\n        --light-blue: #0274b6;\r\n        --toka-dark: #0059B3; \r\n        --light: #fafafa;\r\n        --grey: #f5f5f5;\r\n        --dark-grey: #979797;\r\n        --outline: #c6c6c6;\r\n        --red: #ff5c00;\r\n        --blog-background: #ffffff;\r\n        --background: #F5F8FA;\r\n    }\r\n    /* :root {\r\n        --main: #22458f;\r\n        --white: #ffffff;\r\n        --black: #000000;\r\n        --dark: #191414;\r\n        --title: #333;\r\n        --light-blue: #0274b6;\r\n        --toka-dark: #0059B3; \r\n        --light: #fafafa;\r\n        --grey: #f5f5f5;\r\n        --dark-grey: #979797;\r\n        --outline: #c6c6c6;\r\n        --red: #ff5c00;\r\n        --blog-background: #ffffff;\r\n        --background: #F5F8FA;\r\n    } */\r\n`;","import logo from './logo.svg';\r\nimport './App.css';\r\nimport { BrowserRouter as Router, Route, useParams } from \"react-router-dom\";\r\n\r\n// Pages\r\nimport Landing from './pages/Landing';\r\nimport BlogTest from './pages/BlogTest';\r\nimport GlobalStyle from './GlobalStyle';\r\n\r\nfunction Child() {\r\n  // We can use the `useParams` hook here to access\r\n  // the dynamic pieces of the URL.\r\n  let { blogid } = useParams();\r\n\r\n  return (\r\n    <div>\r\n      <h3>ID: {blogid}</h3>\r\n    </div>\r\n  );\r\n}\r\n\r\nfunction App() {\r\n  return (\r\n    <div className=\"App\">\r\n      <Router>\r\n          <Route path='/leotartarini' exact component={Landing} />\r\n          {/* <Route path='/leotartarini/blog' exact component={BlogTest} /> */}\r\n          <Route path='/leotartarini/blog/:blogid' exact component={BlogTest} />\r\n          <GlobalStyle/>\r\n      </Router>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}